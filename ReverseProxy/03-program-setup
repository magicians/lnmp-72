#!/bin/sh
#### lnmp-70 v0.0.1
############################################################################
source ./initfile
############################################################################
#### ユーザディレクトリにスキャンログを保存する。
############################################################################
#
echo -e "ユーザディレクトリにスキャンログディレクトリを作成。[y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install10
if [ ${opt_install10} = "y" ] ; then
mkdir -p /home/${USER_NAME}/logs/clamscan
chown ${USER_NAME}:${USER_NAME} /home/${USER_NAME}/logs/*
chown ${USER_NAME}:${USER_NAME} /home/${USER_NAME}/logs
fi
#
############################################################################
#### 管理者用メールを設定する。ログ管理ソフトウェアも追加。
############################################################################
#
echo -e "管理者用メールを設定する。ログ管理ソフトウェアも追加。[y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install11
if [ ${opt_install11} = "y" ] ; then
sed -i '/^root:/d' /etc/aliases
echo "root:     ${ALIASES_ROOT_MAIL_ADDR}" >> /etc/aliases
vi /etc/aliases
newaliases
echo test | mail root
yum -y install logwatch
fi
#
############################################################################
#### rkhunter install. 先に入れた物より比較的更新頻度が高いチェッカーを追加する。
############################################################################
#
echo -e "rkhunterのインストール。[y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install12
if [ ${opt_install12} = "y" ] ; then
yum -y install rkhunter
rkhunter --update
sed -i "s|^#ALLOW_SSH_ROOT_USER=no$|ALLOW_SSH_ROOT_USER=no|g" /etc/rkhunter.conf
sed -i "s|^ALLOW_SSH_ROOT_USER=unset$|#ALLOW_SSH_ROOT_USER=unset|g" /etc/rkhunter.conf
vi /etc/rkhunter.conf
# passwd / group permission 604
chmod 604 /etc/{passwd,passwd-,group,group-}
ls -la /etc | grep passwd*
ls -la /etc | grep group*
clear
rkhunter --propupd
rkhunter --check --skip-keypress --report-warnings-only --no-mail-on-warning
#
fi
#
############################################################################
#### tripwire install. 改竄チェック
############################################################################
#
echo -e "tripwireのインストール。[y] \n"
echo -e "既に一回このシェルを通している場合/必要無い場合 [n] \n"
####
read opt_trip_install
if [ ${opt_trip_install} = "y" ] ; then
yum -y install tripwire
tripwire-setup-keyfiles
sed -i 's/^LOOSEDIRECTORYCHECKING\s\+=false$/LOOSEDIRECTORYCHECKING =true/' /etc/tripwire/twcfg.txt
twadmin -m F -c /etc/tripwire/tw.cfg -S /etc/tripwire/site.key /etc/tripwire/twcfg.txt
#
cat <<EOF > /etc/tripwire/twpolmake.pl
#!/usr/bin/perl
# Tripwire Policy File customize tool
# ----------------------------------------------------------------
# Copyright (C) 2003 Hiroaki Izumi
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# ----------------------------------------------------------------
# Usage:
#    perl twpolmake.pl {Pol file}
# ----------------------------------------------------------------
#
\$POLFILE=\$ARGV[0];

open(POL,"\$POLFILE") or die "open error: \$POLFILE" ;
my(\$myhost,\$thost) ;
my(\$sharp,\$tpath,\$cond) ;
my(\$INRULE) = 0 ;

while (<POL>) {
    chomp;
    if ((\$thost) = /^HOSTNAME\s*=\s*(.*)\s*;/) {
        \$myhost = \`hostname\` ; chomp(\$myhost) ;
        if (\$thost ne \$myhost) {
            \$_="HOSTNAME=\"\$myhost\";" ;
        }
    }
    elsif ( /^{/ ) {
        \$INRULE=1 ;
    }
    elsif ( /^}/ ) {
        \$INRULE=0 ;
    }
    elsif (\$INRULE == 1 and (\$sharp,\$tpath,\$cond) = /^(\s*\#?\s*)(\/\S+)\b(\s+->\s+.+)\$/) {
        \$ret = (\$sharp =~ s/\#//g) ;
        if (\$tpath eq '/sbin/e2fsadm' ) {
            \$cond =~ s/;\s+(tune2fs.*)\$/; \#\$1/ ;
        }
        if (! -s \$tpath) {
            \$_ = "\$sharp#\$tpath\$cond" if (\$ret == 0) ;
        }
        else {
            \$_ = "\$sharp\$tpath\$cond" ;
        }
    }
    print "\$_\n" ;
}
close(POL) ;
EOF
#
## 先に生成していたパスワードを数回にわけて打ち込む。※コピペでも可。
#
vim /etc/tripwire/twpolmake.pl
perl /etc/tripwire/twpolmake.pl /etc/tripwire/twpol.txt > /etc/tripwire/twpol.txt.new
twadmin -m P -c /etc/tripwire/tw.cfg -p /etc/tripwire/tw.pol -S /etc/tripwire/site.key /etc/tripwire/twpol.txt.new
#
## orgin txt file
# twadmin -m p -c /etc/tripwire/tw.cfg -p /etc/tripwire/tw.pol -S /etc/tripwire/site.key > /etc/tripwire/twpol.txt
#
rm -f /etc/tripwire/twcfg.txt*
rm -f /etc/tripwire/twpol.txt*
tripwire -m i -s -c /etc/tripwire/tw.cfg
tripwire --init
tripwire --check
#
## update file check
# ls -al /var/lib/tripwire/report/
# tripwire -m u -r /var/lib/tripwire/report/xxxxxx.twr
#
## crontab set tripwire.sh Cronで定期的にチェックさせる
cat <<EOF > /etc/cron.daily/tripwire.sh
#!/bin/bash

PATH=/usr/sbin:/usr/bin:/bin:/usr/local/tripwire/sbin

# パスフレーズ設定
SITEPASS=${INITSITEPASS}  # サイトパスフレーズ
LOCALPASS=${INITLOCALPASS} # ローカルパスフレーズ

cd /etc/tripwire

# Tripwireチェック実行
tripwire -m c -s -c tw.cfg|mail -s "Tripwire(R) Integrity Check Report in `hostname`" root

# ポリシーファイル最新化
twadmin -m p -c tw.cfg -p tw.pol -S site.key > twpol.txt
perl twpolmake.pl twpol.txt > twpol.txt.new
twadmin -m P -c tw.cfg -p tw.pol -S site.key -Q \$SITEPASS twpol.txt.new > /dev/null
rm -f twpol.txt* *.bak

# データベース最新化
rm -f /usr/local/tripwire/lib/tripwire/*.twd*
tripwire -m i -s -c tw.cfg -P \$LOCALPASS
EOF
## /home/${UserName}/tw/*.txt
vim /etc/cron.daily/tripwire.sh
chmod 700 /etc/cron.daily/tripwire.sh
####
fi
#
############################################################################
#### clamd install. VirusScanを追加。
############################################################################
#
echo -e "clamdのインストール。[y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install13
if [ ${opt_install13} = "y" ] ; then
yum -y install clamd
sed -i "s|^TCPSocket 3310$|#\0|" /etc/clamd.conf
sed -i "s|^TCPAddr 127.0.0.1$|#\0|" /etc/clamd.conf
sed -i "s|^#ExcludePath \^/proc/$|ExcludePath \^/proc/|" /etc/clamd.conf
sed -i "s|^#ExcludePath \^/sys/$|ExcludePath \^/sys/|" /etc/clamd.conf
sed -i "s|^DetectBrokenExecutables yes$|#\0|" /etc/clamd.conf
sed -i "s|^User clamav$|#\0|" /etc/clamd.conf
vi /etc/clamd.conf
sed -i "s|^DatabaseOwner clamav$|DatabaseOwner root|" /etc/freshclam.conf
vi /etc/freshclam.conf
#
## clamd cron setup
cat <<EOF > /etc/cron.weekly/clamscan
#!/bin/bash
yum -y update clamd > /dev/null 2>&1
/usr/bin/freshclam > /dev/null
/usr/bin/clamscan -i -r --remove /home >> /home/${USER_NAME}/logs/clamscan/clamscan.txt 2>&1
cd /home/${USER_NAME}/logs/clamscan
mv clamscan.txt clamscan."\$(date +%Y%m%d-%I%M%S).txt"
chown ${USER_NAME}:${USER_NAME} /home/${USER_NAME}/logs/clamscan/*.txt
EOF
#
chmod +x /etc/cron.weekly/clamscan
## clamd startup
systemctl enable clamd
systemctl start clamd
freshclam
clamscan --infected --remove --recursive
#
# clamd.pid Create.
echo -e "clamd.pid Create.\n"
echo "d /var/run/clamav 0755 root root -" >> /etc/tmpfiles.d/clamd.conf
vi /etc/tmpfiles.d/clamd.conf
systemd-tmpfiles --create clamd.conf
systemctl daemon-reload
systemctl restart clamd
systemctl status clamd
#
fi
## ntp.conf Edit
systemctl stop ntpd
systemctl disable ntpd
#echo "disable monitor" >> /etc/ntp.conf
#vi /etc/ntp.conf
#
## sysctl Edit IPv6の無効化及び、PostfixをIPv4のみ設定にする。
#
echo -e "sysctlのセットアップ。[y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install14
if [ ${opt_install14} = "y" ] ; then
echo "net.ipv4.icmp_echo_ignore_broadcasts = 1" >> /etc/sysctl.conf
echo "net.ipv4.icmp_echo_ignore_all = 1" >> /etc/sysctl.conf
echo "net.ipv4.icmp_ignore_bogus_error_responses = 1" >> /etc/sysctl.conf
echo "net.ipv4.tcp_syncookies = 1" >> /etc/sysctl.conf
echo "net.ipv4.tcp_rfc1337 = 1" >> /etc/sysctl.conf
echo "net.ipv4.tcp_tw_recycle = 1" >> /etc/sysctl.conf
echo "net.ipv4.tcp_fin_timeout = 15" >> /etc/sysctl.conf
vi /etc/sysctl.conf
sysctl -p
sed -i 's|^inet_protocols = all$|inet_protocols = ipv4|' /etc/postfix/main.cf
vi /etc/postfix/main.cf
#
fi
## 再起動
echo "再起動しますか？ [y/n] \n"
read opt_install15
if [ ${opt_install15} = "y" ] ; then
reboot
fi
#
############################################################################
## 最低限のセットアップは以上です。以降、必要があればWebサーバを追加してください。
############################################################################