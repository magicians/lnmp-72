#!/bin/sh
#### lnmp-70 v0.0.1
############################################################################
source ./initfile
############################################################################
# totem on Malware Infection. / uninstall.
yum remove -y totem
#
echo -e "ローカルセットアップを開始します。[y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install01
if [ ${opt_install01} = "y" ] ; then
#### 接続先を固定する、他からの接続は原則拒否推奨。
echo "hosts.allow のインストール先はローカルですか？ [y/n]"
read localhosts
if [ ${localhosts} = "y" ] ; then
# ローカル環境での設定
	echo "sshd: ${LOCAL_IP_HOSTS}" >> /etc/hosts.allow
else
	echo "接続は固定IPですか？ [y/n]"
	read DefIpHosts
	if [ ${DefIpHosts} = "y" ] ; then
# 固定IPによる接続
		echo "sshd: ${GLOBAL_IP_ADDR}" >> /etc/hosts.allow
	else
# DHCP・プロバイダホストによる接続
		echo "sshd: ${GLOBAL_ACCESS_HOSTS}" >> /etc/hosts.allow
	fi
fi
echo "ALL: ALL" >> /etc/hosts.deny
fi
#
############################################################################
#### アクセス権限をユーザに付与。
############################################################################
#
echo -e "アクセス権限をユーザに付与します[y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install02
if [ ${opt_install02} = "y" ] ; then
sed -i "s|^#auth\t\trequired|auth\t\trequired|" /etc/pam.d/su
#
vi /etc/pam.d/su
visudo
fi
#
############################################################################
#### SSHの初期設定。
############################################################################
#
echo -e "SSHの初期設定を開始します。[y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install03
if [ ${opt_install03} = "y" ] ; then
## SSH ポート変更
sed -i "s|^#Port 22$|Port $SSH_EDIT_PORT|" /etc/ssh/sshd_config
## SSH rootでのログインを不可にする
sed -i "s|^#PermitRootLogin yes|PermitRootLogin no|" /etc/ssh/sshd_config
## SSH 公開鍵での接続を有効化する
sed -i "s|^#PubkeyAuthentication yes|PubkeyAuthentication yes|" /etc/ssh/sshd_config
## SSH パスワードによるログインを不可にする
sed -i "s|^PasswordAuthentication yes|PasswordAuthentication no|" /etc/ssh/sshd_config
## SSH でログインするユーザを指定する
echo "AllowUsers ${USER_NAME}" >> /etc/ssh/sshd_config
## sshd_config の確認・及び間違いがあれば変更する
vi /etc/ssh/sshd_config
## sshd_config のテスト
sshd -t
fi
#
############################################################################
#### iptablesセットアップ・シェルスクリプトを作成。
############################################################################
#
echo -e "iptables-servicesのインストール [y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install04
if [ ${opt_install04} = "y" ] ; then
yum -y install iptables-services
systemctl stop firewalld
systemctl disable firewalld
systemctl start iptables
systemctl enable iptables
fi
# iptablesセットアップ
echo -e "iptablesセットアップ [y] \n"
echo -e "既に一回このシェルを通している場合は [n] \n"
read opt_install05
if [ ${opt_install05} = "y" ] ; then
# iptables setup.
echo -e "iptables setup.\n"
cat <<EOF > /home/${USER_NAME}/.iptables_setup
#!/bin/bash

#COMMIT File
IPTABLES_CONF_TMP=\`mktemp\`

#iptablesの停止
systemctl stop iptables

#COMMIT Start
echo "*filter" >> \$IPTABLES_CONF_TMP
#デフォルトルール

echo ":INPUT DROP [0:0]" >> \$IPTABLES_CONF_TMP
echo ":FORWARD DROP [0:0]" >> \$IPTABLES_CONF_TMP
echo ":OUTPUT ACCEPT [0:0]" >> \$IPTABLES_CONF_TMP

#ループバック
echo "-A OUTPUT -o lo -j ACCEPT" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -i lo -j ACCEPT" >> \$IPTABLES_CONF_TMP

#Ping エコー応答・要求のみ 許可
echo "-A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT" >> \$IPTABLES_CONF_TMP

#パケットチェック
echo "-A INPUT -p 50 -j ACCEPT" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -p 51 -j ACCEPT" >> \$IPTABLES_CONF_TMP

#マルチキャストDNS
echo "-A INPUT -d 224.0.0.251/32 -p udp -m udp --dport 5353 -j ACCEPT" >> \$IPTABLES_CONF_TMP

#接続済みのセッションを接続許可
echo "-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT" >> \$IPTABLES_CONF_TMP

#接続時のSSHポート及びサーバポートの設定
#SSH
echo "-A INPUT -p tcp -m state --state NEW -m tcp --dport ${SSH_EDIT_PORT} -j ACCEPT" >> \$IPTABLES_CONF_TMP
#HTTP
echo "-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT" >> \$IPTABLES_CONF_TMP
#HTTPS
echo "-A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT" >> \$IPTABLES_CONF_TMP

#メールサーバのポート設定
#SMTP
#echo "-A INPUT -p tcp -m state --state NEW -m tcp --dport 25 -j ACCEPT" >> \$IPTABLES_CONF_TMP
#POP
#echo "-A INPUT -p tcp -m state --state NEW -m tcp --dport 110 -j ACCEPT" >> \$IPTABLES_CONF_TMP
#IMAP
#echo "-A INPUT -p tcp -m state --state NEW -m tcp --dport 143 -j ACCEPT" >> \$IPTABLES_CONF_TMP

#LOCAL IP Addr ACCEPT, プライベートネットワークを構築している場合のみ変更する
echo "-A INPUT -s ${LOCAL_IP_ADDR} -j ACCEPT" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d ${LOCAL_IP_ADDR} -j ACCEPT" >> \$IPTABLES_CONF_TMP

#外部からのSNMP通信(UDP:161)をFWで破棄
echo "-A INPUT -p udp -m udp --dport 161 -j DROP" >> \$IPTABLES_CONF_TMP

#セキュアセットアップ・ステルススキャンの破棄
echo "-A INPUT -p tcp -m state --state NEW -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -j DROP" >> \$IPTABLES_CONF_TMP

#セキュアセットアップ・フラグメントパケットによる攻撃の破棄
echo "-A INPUT -f -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,PSH,URG -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,SYN,RST,PSH,ACK,URG -j DROP" >> \$IPTABLES_CONF_TMP

#TCP Null ポートスキャンの対策
echo "-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -p tcp -m tcp --tcp-flags SYN,RST SYN,RST -j DROP" >> \$IPTABLES_CONF_TMP

#TCP Xmas ポートスキャンの対策
echo "-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN FIN,SYN -j DROP" >> \$IPTABLES_CONF_TMP

#TCP FINポートスキャンの対策
echo "-A INPUT -p tcp -m tcp --tcp-flags FIN,ACK FIN -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,SYN,RST,ACK,URG -j DROP" >> \$IPTABLES_CONF_TMP

#ブロードキャスト・パケットの破棄
echo "-A INPUT -m pkttype --pkt-type broadcast -j DROP" >> \$IPTABLES_CONF_TMP

#マルチキャスト・パケットの破棄
echo "-A INPUT -m pkttype --pkt-type multicast -j DROP" >> \$IPTABLES_CONF_TMP

#無効ヘッダがあるTCPパケットを破棄
echo "-A INPUT -m state --state INVALID -j DROP" >> \$IPTABLES_CONF_TMP

#セキュアセットアップ・プライベートアドレスからの接続を破棄
echo "-A INPUT -s 127.0.0.0/8 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 127.0.0.0/8 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 192.168.0.0/16 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 192.168.0.0/16 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 192.0.2.0/24 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 192.0.2.0/24 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 172.16.0.0/12 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 172.16.0.0/12 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 10.0.0.0/8 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 10.0.0.0/8 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 169.254.0.0/16 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 169.254.0.0/16 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 168.254.0.0/16 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 168.254.0.0/16 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 224.0.0.0/4 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 224.0.0.0/4 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 240.0.0.0/4 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 240.0.0.0/4 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 240.0.0.0/5 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 240.0.0.0/5 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -s 248.0.0.0/5 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 248.0.0.0/5 -j DROP" >> \$IPTABLES_CONF_TMP

#セキュアセットアップ・ブロードキャストからの接続を破棄
echo "-A INPUT -d 0.0.0.0/8 -j DROP" >> \$IPTABLES_CONF_TMP
echo "-A INPUT -d 255.255.255.255/32 -j DROP" >> \$IPTABLES_CONF_TMP

#セキュアセットアップ・Ping攻撃の破棄
echo "-A INPUT -p icmp -m icmp --icmp-type 8 -m hashlimit --hashlimit-upto 1/sec --hashlimit-burst 5 --hashlimit-mode srcip --hashlimit-name input_icmp --hashlimit-htable-expire 300000 -j DROP" >> \$IPTABLES_CONF_TMP

##セキュアセットアップ・Ping及び113ポートからの接続を拒否
echo "-A INPUT -p tcp -m tcp --dport 113 -j REJECT --reject-with tcp-reset" >> \$IPTABLES_CONF_TMP

#ICMPからの接続を拒否
echo "-A INPUT -j REJECT --reject-with icmp-host-prohibited" >> \$IPTABLES_CONF_TMP

#Logging
echo "-A INPUT -m limit --limit 5/m --limit-burst 7 -j LOG --log-prefix \" DEFAULT DROP \" " >> \$IPTABLES_CONF_TMP
echo "-A INPUT -j DROP" >> \$IPTABLES_CONF_TMP

#COMMIT End
echo "COMMIT" >> \$IPTABLES_CONF_TMP

#iptablesの保存
cat \$IPTABLES_CONF_TMP > /etc/sysconfig/iptables

#iptablesの起動
systemctl start iptables
iptables -L
EOF
vi /home/${USER_NAME}/.iptables_setup
sed -i "s/^-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT$/#\0/g" /etc/sysconfig/ip6tables
vi /etc/sysconfig/ip6tables
#
############################################################################
#### ユーザディレクトリにiptablesセットアップ・シェルスクリプトを保存。
############################################################################
#
echo "セットアップ先はグローバル環境ですか？ [y/n]"
read globaliptable
if [ ${globaliptable} = "y" ] ; then
	# グローバル環境では使わない。※ ローカル環境専用
	sed -i "s|echo \"-A INPUT -s ${LOCAL_IP_ADDR} -j ACCEPT\" >> \$IPTABLES_CONF_TMP$|#\0|g" /home/${USER_NAME}/.iptables_setup
	sed -i "s|echo \"-A INPUT -d ${LOCAL_IP_ADDR} -j ACCEPT\" >> \$IPTABLES_CONF_TMP$|#\0|g" /home/${USER_NAME}/.iptables_setup
fi
vi /home/${USER_NAME}/.iptables_setup
## ユーザディレクトリに保存したセットアップ・シェルスクリプトのアクセス権を変更。
chmod 400 /home/${USER_NAME}/.iptables_setup
sh /home/${USER_NAME}/.iptables_setup
chown -R ${USER_NAME}:${USER_NAME} /home/${USER_NAME}/.iptables_setup
chmod 701 /home/${USER_NAME}
fi
#
############################################################################
## iptablesの確認とip6tables-IPv6の無効化
systemctl restart sshd
ss -lt
#
############################################################################
##  新しい端末を起動し、現状のセッションを残したまま再ログインしてください。
############################################################################