#!/bin/bash
#### lnmp-70 v1.0.1
############################################################################
source ./initfile.txt
source ./default.txt
source ./server.txt
source ./cms.txt
############################################################################
#### Database Setup.
echo "Database Setup."
mysql -u root -p${DB_ROOT_PASSWD} -e "CREATE DATABASE ${CREATE_DB_NAME} DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;"
mysql -u root -p${DB_ROOT_PASSWD} -e "GRANT ALL PRIVILEGES ON ${CREATE_DB_NAME}.* TO ${DB_USER_NAME}@localhost IDENTIFIED BY \"${DB_USER_PASSWD}\";"
mysql -u root -p${DB_ROOT_PASSWD} -e "DELETE FROM mysql.user WHERE User='root' AND host IN ('127.0.0.1', '::1');"
mysql -u root -p${DB_ROOT_PASSWD} -e "FLUSH PRIVILEGES;"
mysql -u root -p${DB_ROOT_PASSWD} -e "SHOW DATABASES;"
mysql -u root -p${DB_ROOT_PASSWD}
####
clear
############################################################################
echo -e "CMS Install for WordPress [y] / concrete5 [n]"
read set_cms_wpinstall
if [ ${set_cms_wpinstall} = "y" ] ; then
clear
echo "WordPress-$WP_VERSION install start."
## Install File Download.
cd ${APACHE_FILE_DIRECTORY}
curl -O ${WP_DL_URL}/${WP_DL_FILE}
unzip ${APACHE_FILE_DIRECTORY}/${WP_DL_FILE}
rm -f ${APACHE_FILE_DIRECTORY}/${WP_DL_FILE}
mkdir ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}
mv ${APACHE_FILE_DIRECTORY}/wordpress/* ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/
rm -fr ${APACHE_FILE_DIRECTORY}/wordpress
cd ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/
mv ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config-sample.php ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config.php
cp ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/index.php ${APACHE_FILE_DIRECTORY}/index.php
## -- index.php Edit.
sed -i "s|'/wp-blog-header.php' );$|'/${WP_CONF_DIR}/wp-blog-header.php' );|g" ${APACHE_FILE_DIRECTORY}/index.php
vim ${APACHE_FILE_DIRECTORY}/index.php
## -- wp-config.php Edit.
sed -i "s|database_name_here|${CREATE_DB_NAME}|g" ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config.php
sed -i "s|username_here|${DB_USER_NAME}|g" ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config.php
sed -i "s|password_here|${DB_USER_PASSWD}|g" ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config.php
sed -i "s|localhost|${WP_DB_UNIX_PATH}|g" ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config.php
sed -i "s|wp_|${WP_DB_PREFIX}|g" ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config.php
sed -i "84a\define('FORCE_SSL_ADMIN', true);" ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config.php
sed -i "s|\r||g" ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config.php
vim ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-config.php
clear
echo -e "Jp: 以下のプラグインを追加しますか？"
echo -e "Jp: 必要と思えるプラグインだけ選択して下さい。 [y/n]"
echo -e "En: Do you want to add the following plug-ins?"
echo -e "En: Choose only plug-ins that seems necessary. [y/n]"
echo -e "( JetPack, CrazyBone, EditAuthorSlug, NginxCacheController, WP-SiteManager )"
read setpluginsinstalls
if [ ${setpluginsinstalls} = "y" ] ; then
## -- WP Plugins install.
cd ${APACHE_FILE_DIRECTORY}/${WP_CONF_DIR}/wp-content/plugins/
clear
# JetPack
echo -e "Jp: JetPack をインストールしますか？ [y/n]"
echo -e "En: Do you want to install JetPack? [y/n]"
read setjetpackinstall
if [ ${setjetpackinstall} = "y" ] ; then
curl -O https://downloads.wordpress.org/plugin/jetpack.3.9.1.zip
unzip jetpack.3.9.1.zip
fi
clear
# CrazyBone
echo -e "Jp: CrazyBone をインストールしますか？ [y/n]"
echo -e "En: Do you want to install CrazyBone? [y/n]"
read setcrazyboneinstall
if [ ${setcrazyboneinstall} = "y" ] ; then
curl -O https://downloads.wordpress.org/plugin/crazy-bone.0.6.0.zip
unzip crazy-bone.0.6.0.zip
fi
clear
# Edit Author Slug
echo -e "Jp: EditAuthorSlug をインストールしますか？ [y/n]"
echo -e "En: Do you want to install EditAuthorSlug? [y/n]"
read seteasinstall
if [ ${seteasinstall} = "y" ] ; then
curl -O https://downloads.wordpress.org/plugin/edit-author-slug.1.1.2.zip
unzip edit-author-slug.1.1.2.zip
fi
clear
# Nginx Cache Controller
echo -e "Jp: NginxCacheController をインストールしますか？ [y/n]"
echo -e "En: Do you want to install NginxCacheController? [y/n]"
read setnccinstall
if [ ${setnccinstall} = "y" ] ; then
curl -O https://downloads.wordpress.org/plugin/nginx-champuru.3.1.1.zip
unzip nginx-champuru.3.1.1.zip
fi
clear
# WP-SiteManager
echo -e "Jp: WP-SiteManager をインストールしますか？ [y/n]"
echo -e "En: Do you want to install WP-SiteManager? [y/n]"
read setwpsminstall
if [ ${setwpsminstall} = "y" ] ; then
curl -O https://downloads.wordpress.org/plugin/wp-sitemanager.1.1.8.zip
unzip wp-sitemanager.1.1.8.zip
fi
####
rm -f *.zip
####
fi
chown -R ${WEB_SERVER_SYSTEM_USER_GROUP}:${WEB_SERVER_SYSTEM_USER_GROUP} ${APACHE_FILE_DIRECTORY}/*
chown -R ${WEB_SERVER_SYSTEM_USER_GROUP}:${WEB_SERVER_SYSTEM_USER_GROUP} /var/lib/php/*
#####################################
echo "WordPress-$WP_VERSION install end."
else
echo "$C5_VERSION install start."
cd ${APACHE_FILE_DIRECTORY}
wget http://www.concrete5.org/download_file/-/view/85712/
mv ${APACHE_FILE_DIRECTORY}/index.html ${APACHE_FILE_DIRECTORY}/${C5_VERSION}.zip
unzip ${APACHE_FILE_DIRECTORY}/${C5_VERSION}.zip
rm -f ${APACHE_FILE_DIRECTORY}/${C5_VERSION}.zip
mv ${APACHE_FILE_DIRECTORY}/${C5_VERSION}/* ${APACHE_FILE_DIRECTORY}/
rm -fr ${APACHE_FILE_DIRECTORY}/${C5_VERSION}
chown -R ${WEB_SERVER_SYSTEM_USER_GROUP}:${WEB_SERVER_SYSTEM_USER_GROUP} ${APACHE_FILE_DIRECTORY}/*
chown -R ${WEB_SERVER_SYSTEM_USER_GROUP}:${WEB_SERVER_SYSTEM_USER_GROUP} /var/lib/php/*
echo "$C5_VERSION install end."
fi
#####################################
clear
/usr/sbin/nginx -t
echo -e "Jp: Webサーバを再起動しますか？ [y/n]"
echo -e "En: Do you want to restart the Web server? [y/n]"
read WP_WEBSERVER_RESTART
#####################################
if [ ${WP_WEBSERVER_RESTART} = "y" ]; then
#systemctl restart httpd
systemctl restart php-fpm
systemctl restart nginx
systemctl restart mariadb
fi
#####################################
clear
echo -e "Jp: 選択したCMSのインストールに関する事前準備は完了しました。"
echo -e "Jp: ブラウザを起動して引き続きインストール作業を行ってください。"
echo -e "Jp: その後 last_optimization を実行し、ファイルのチェックを行ってください。"
echo -e "En: Advance preparation on the installation of the selected CMS was completed."
echo -e "En: Please continue to perform the installation work by starting the browser."
echo -e "En: Then run the last_optimization, please do check of files."
#### Adminer Install.
#https://www.adminer.org/static/download/4.2.3/adminer-4.2.3.php
# Adminer Pluginでも可。
############################################################
############################################################
chmod +x ${INSTALL_PATH}/last_optimization